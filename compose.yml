version: '3.8'

services:
  db:
    image: docker.io/library/postgres:17-alpine
    container_name: k-resolver-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kresolver}
      POSTGRES_USER: ${POSTGRES_USER:-kresolver}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-kresolver_password}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=ko_KR.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-kresolver}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Containerfile
    container_name: k-resolver-api
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-kresolver}:${POSTGRES_PASSWORD:-kresolver_password}@db:5432/${POSTGRES_DB:-kresolver}
      API_HOST: ${API_HOST:-0.0.0.0}
      API_PORT: ${API_PORT:-8000}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      CORS_ORIGINS: ${CORS_ORIGINS:-*}
      MAXMIND_LICENSE_KEY: ${MAXMIND_LICENSE_KEY:-}
    ports:
      - "${API_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src:/app/src:ro
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
